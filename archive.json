{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-01-23T00:51:42.699238+00:00",
  "repo": "privacysandbox/draft-ietf-bidding-and-auction-services",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 13,
      "id": "I_kwDOMnZLVc6a3rcP",
      "title": "test",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/issues/13",
      "state": "CLOSED",
      "author": "caraitto",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "test",
      "createdAt": "2024-10-18T19:55:07Z",
      "updatedAt": "2024-10-18T19:55:40Z",
      "closedAt": "2024-10-18T19:55:22Z",
      "comments": [
        {
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @caraitto for verifying that this repository is open!",
          "createdAt": "2024-10-18T19:55:38Z",
          "updatedAt": "2024-10-18T19:55:38Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOMnZLVc55dfIv",
      "title": "Update and rename draft-ietf-trusted-auction-services.md to draft-iet\u2026",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/1",
      "state": "MERGED",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026f-trusted-auction-service.md",
      "createdAt": "2024-08-26T16:21:42Z",
      "updatedAt": "2024-08-29T18:56:11Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "86dd048dd7ed1b6ec054afcfc4318b1e5d9e8587",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "brusshamilton-patch-1",
      "headRefOid": "3519a0d4d57777955d37fa7746e3a44353c2f333",
      "closedAt": "2024-08-27T16:56:26Z",
      "mergedAt": "2024-08-27T16:56:26Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "332176193de05a035156166f39c15fab3c737a3e"
      },
      "comments": [
        {
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "body": "may want to remove the \"trusted\" from the name also, so it matches the repo name, but that's up to you.  LGTM otherwise.",
          "createdAt": "2024-08-26T16:32:42Z",
          "updatedAt": "2024-08-26T16:32:42Z"
        },
        {
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "body": "> may want to remove the \"trusted\" from the name also, so it matches the repo name, but that's up to you. LGTM otherwise.\r\n\r\nI don't think so. Also, I think \"Auction Service\" is a bit too short. If we're concerned about the repository name not matching the proposal, then maybe we should change the repository name?",
          "createdAt": "2024-08-26T17:30:39Z",
          "updatedAt": "2024-08-26T17:30:39Z"
        },
        {
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "body": "Fine with the doc rename. We can change the repo name later right before we publish. ",
          "createdAt": "2024-08-27T01:35:34Z",
          "updatedAt": "2024-08-27T01:35:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6G8BSE",
          "commit": {
            "abbreviatedOid": "3519a0d"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T16:06:00Z",
          "updatedAt": "2024-08-27T16:06:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLVc6G8d_M",
          "commit": {
            "abbreviatedOid": "3519a0d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T16:56:03Z",
          "updatedAt": "2024-08-27T16:56:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOMnZLVc55mtWX",
      "title": "Add more section structure and update CDDL",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/2",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-27T17:19:58Z",
      "updatedAt": "2024-09-10T12:05:22Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "332176193de05a035156166f39c15fab3c737a3e",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "dankocoj-draft-setup",
      "headRefOid": "86cf49feb239f901373cfca07123e92abcf18627",
      "closedAt": "2024-09-10T12:05:20Z",
      "mergedAt": "2024-09-10T12:05:20Z",
      "mergedBy": "JensenPaul",
      "mergeCommit": {
        "oid": "4e5b5f0f4081f3b6e4718d5a8f2c14430de9e0bf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6G8raw",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:24:16Z",
          "updatedAt": "2024-08-27T17:24:16Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "nit: This line looks incorrect in Markdown and appears to be ignored in HTML.\r\n```suggestion\r\n```",
              "createdAt": "2024-08-27T17:24:16Z",
              "updatedAt": "2024-08-27T17:24:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G8t4V",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:29:45Z",
          "updatedAt": "2024-08-27T17:29:45Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I'd also be okay eliding the mention of TEEs\r\n```suggestion\r\nThis document provides a specification for the request and response message\r\nformat that a browser can use to communicate with services running in Trusted\r\nExecution Environments (TEEs) that allows the browser to offload much of the\r\nwork involved in running an advertisement selection auction as part of the\r\nbrowser's implementation of the Protected Audience API.\r\n```",
              "createdAt": "2024-08-27T17:29:45Z",
              "updatedAt": "2024-08-27T17:29:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G8vyN",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:33:53Z",
          "updatedAt": "2024-08-27T17:33:53Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "This should link to:\r\nhttps://www.ietf.org/rfc/rfc7932.txt for Brotli\r\nhttps://www.ietf.org/rfc/rfc1952.txt for GZIP\r\nthough I don't know how you add footnotes/links and I also don't know the right way to reference other RFCs",
              "createdAt": "2024-08-27T17:33:53Z",
              "updatedAt": "2024-08-27T17:33:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G8wAQ",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:34:23Z",
          "updatedAt": "2024-08-27T17:34:23Z",
          "comments": [
            {
              "originalPosition": 179,
              "body": "```suggestion\r\nthe following 5 bits specify the compression algorithm. The format described in this\r\n\r\n```",
              "createdAt": "2024-08-27T17:34:23Z",
              "updatedAt": "2024-08-27T17:34:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G8ySq",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:39:38Z",
          "updatedAt": "2024-08-27T17:39:38Z",
          "comments": [
            {
              "originalPosition": 184,
              "body": "I believe KiB is the standard: https://physics.nist.gov/cuu/Units/binary.html\r\n```suggestion\r\nMessages SHOULD be zero padded up to one of the following bin sizes:\r\n0KiB, 5KiB, 10KiB, 20KiB, 30KiB, 40KiB, 55KiB. Messages\r\nSHALL NOT be be larger than 55KiB. An implementation may need to remove some\r\n```",
              "createdAt": "2024-08-27T17:39:38Z",
              "updatedAt": "2024-08-27T17:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G8zYu",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T17:42:06Z",
          "updatedAt": "2024-08-27T17:57:49Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "This needs to be updated as per https://github.com/WICG/turtledove/pull/1243",
              "createdAt": "2024-08-27T17:42:06Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 206,
              "body": "https://github.com/WICG/turtledove/pull/1243",
              "createdAt": "2024-08-27T17:42:14Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 360,
              "body": "I don't know what \"render_url\" is.  We should clarify this with a link to another spec.",
              "createdAt": "2024-08-27T17:44:48Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 360,
              "body": "How these items are hashed together should be more concretely defined, e.g. https://wicg.github.io/turtledove/#query-ad-k-anonymity-count",
              "createdAt": "2024-08-27T17:46:25Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 368,
              "body": "same comment as above but about \"ad_component_render_url\"",
              "createdAt": "2024-08-27T17:46:56Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 368,
              "body": "same comment as above but referencing something like https://wicg.github.io/turtledove/#query-component-ad-k-anonymity-count",
              "createdAt": "2024-08-27T17:47:56Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 359,
              "body": "should we footnote/link SHA-256 to https://www.ietf.org/rfc/rfc6234.txt?",
              "createdAt": "2024-08-27T17:49:11Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 451,
              "body": "We should probably remove the \"(Chrome)\" but perhaps footnote/link \"Origin\" to https://html.spec.whatwg.org/multipage/webappapis.html#concept-settings-object-origin or perhaps we don't want to reference web specs here, so perhaps it's better to instead reference the buyer's origin field in the request object defined in this spec",
              "createdAt": "2024-08-27T17:51:07Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 472,
              "body": "```suggestion\r\n    ; The ad render URL corresponding\r\n```",
              "createdAt": "2024-08-27T17:51:43Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 494,
              "body": "```suggestion\r\n    ; the ghost winning ad\r\n```",
              "createdAt": "2024-08-27T17:52:09Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 480,
              "body": "Is there a reason all these are line wrapped to a small number of characters?",
              "createdAt": "2024-08-27T17:52:29Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 485,
              "body": "We should probably mention the format of currencies, perhaps with a regular expression.  They're three uppercase letters: https://wicg.github.io/turtledove/#check-whether-a-string-is-a-valid-currency-tag",
              "createdAt": "2024-08-27T17:54:46Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 227,
              "body": "Should all these descriptions end in periods?",
              "createdAt": "2024-08-27T17:55:38Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 237,
              "body": "Is there a way to link this to the \"Name\" and \"InterestGroup\" types defined elsewhere in this spec?",
              "createdAt": "2024-08-27T17:56:53Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            },
            {
              "originalPosition": 243,
              "body": "Should this instead reference the request field that this should mirror?",
              "createdAt": "2024-08-27T17:57:35Z",
              "updatedAt": "2024-08-27T17:57:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G-gDA",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T21:48:43Z",
          "updatedAt": "2024-08-27T21:48:43Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Same, I think that falls outside the purpose of this spec. I'll update. ",
              "createdAt": "2024-08-27T21:48:43Z",
              "updatedAt": "2024-08-27T21:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G-lIg",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T22:07:25Z",
          "updatedAt": "2024-08-27T22:07:25Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "Sorry, what do you mean exactly? \r\n\r\n![image](https://github.com/user-attachments/assets/dbbe57e9-eb56-4e45-9631-c5cf6cdf106a)\r\n\r\nThis is what I see in the html, what do you think we need to improve on? ",
              "createdAt": "2024-08-27T22:07:25Z",
              "updatedAt": "2024-08-27T22:07:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6G-olC",
          "commit": {
            "abbreviatedOid": "8387c98"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T22:20:24Z",
          "updatedAt": "2024-08-27T22:20:24Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "![image](https://github.com/user-attachments/assets/e75e6ed9-4fd8-4845-85fe-521e86a84634)\r\nsimple as this I believe (so Brotli becomes Brotli {{!RFC7932}} and the `make` command handles filling out the citation for you)",
              "createdAt": "2024-08-27T22:20:24Z",
              "updatedAt": "2024-08-27T22:20:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HE5Vv",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:06:56Z",
          "updatedAt": "2024-08-28T13:06:56Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "Take a look at the table here: https://github.com/privacysandbox/draft-ietf-protected-audience-auction-service/blob/main/draft-ietf-trusted-auction-service.md",
              "createdAt": "2024-08-28T13:06:56Z",
              "updatedAt": "2024-08-28T13:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HGo_I",
          "commit": {
            "abbreviatedOid": "8387c98"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T15:45:31Z",
          "updatedAt": "2024-08-28T15:45:31Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "<img width=\"896\" alt=\"image\" src=\"https://github.com/user-attachments/assets/47cb3846-9213-47fb-b5ab-ef53d2c6f916\">\r\nThis table is rendered using Github's Markdown dialect, which is different from kramdown-rfc. I think we only care how it renders in plaintext and html though. ",
              "createdAt": "2024-08-28T15:45:31Z",
              "updatedAt": "2024-08-28T15:45:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HHJpL",
          "commit": {
            "abbreviatedOid": "8387c98"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T16:47:27Z",
          "updatedAt": "2024-08-28T16:47:27Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "@brusshamilton for visibility. Not sure what media type we're going to use -- different than KV? ",
              "createdAt": "2024-08-28T16:47:27Z",
              "updatedAt": "2024-08-28T16:47:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HHL5c",
          "commit": {
            "abbreviatedOid": "8387c98"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T16:52:10Z",
          "updatedAt": "2024-08-28T16:52:10Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "I don't think there's a way to link to RFCs inside code blocks (the cddl below). I think we'll just have to break up the code blocks a bit more.",
              "createdAt": "2024-08-28T16:52:10Z",
              "updatedAt": "2024-08-28T16:52:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HH-BF",
          "commit": {
            "abbreviatedOid": "8387c98"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T18:41:14Z",
          "updatedAt": "2024-08-28T18:41:14Z",
          "comments": [
            {
              "originalPosition": 451,
              "body": "I think it's fine to have informative (versus normative) references to w3c. \r\nexample: https://www.rfc-editor.org/rfc/rfc9458#UWT",
              "createdAt": "2024-08-28T18:41:14Z",
              "updatedAt": "2024-08-28T18:41:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HIZIb",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T19:44:43Z",
          "updatedAt": "2024-08-28T19:44:43Z",
          "comments": [
            {
              "originalPosition": 480,
              "body": "Fixed. Linter suggests 72 chars (after transforming to xml), so that's roughly what I've followed here. Some manual tweaking was required because the md -> xml transform may alter the char count by a small amount.",
              "createdAt": "2024-08-28T19:44:43Z",
              "updatedAt": "2024-08-28T19:44:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HIaNW",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T19:47:18Z",
          "updatedAt": "2024-08-28T19:47:18Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "@brusshamilton is this something you can add to the w3c spec? Then I can link to it from here. ",
              "createdAt": "2024-08-28T19:47:18Z",
              "updatedAt": "2024-08-28T19:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HRzK4",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T17:20:13Z",
          "updatedAt": "2024-08-29T17:20:13Z",
          "comments": [
            {
              "originalPosition": 237,
              "body": "Not possible to link in a cddl code block, but I added a 'common definitions' section with a table that has rows with both cddl spans and reference / citation links. ",
              "createdAt": "2024-08-29T17:20:13Z",
              "updatedAt": "2024-08-29T17:20:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HRzMZ",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T17:20:15Z",
          "updatedAt": "2024-08-29T17:20:15Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "updated as best as I could think of (but fenced code blocks don't allow linking, at least in a way I could figure out).",
              "createdAt": "2024-08-29T17:20:15Z",
              "updatedAt": "2024-08-29T17:20:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HS1HC",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T19:00:30Z",
          "updatedAt": "2024-08-29T19:00:30Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "Something like this should be fine:\r\n```\r\nSince we are [repurposing the OHTTP encapsulation mechanism, we are required to define new media types](https://www.rfc-editor.org/rfc/rfc9458.html#name-repurposing-the-encapsulati):\r\n* The OHTTP request media type is \u201cmessage/auction request\u201d\r\n* The OHTTP response media type is \u201cmessage/auction response\u201d\r\n\r\nNote that these media types are [concatenated with other fields when creating the HPKE encryption context](https://www.rfc-editor.org/rfc/rfc9458.html#name-encapsulation-of-requests), and are not HTTP content or media types.\r\n```\r\nThough we need to work it in.",
              "createdAt": "2024-08-29T19:00:30Z",
              "updatedAt": "2024-08-29T19:00:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HTvMK",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T20:14:16Z",
          "updatedAt": "2024-08-29T20:14:16Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "It exists in the W3C spec:\r\nhttps://wicg.github.io/turtledove/#compute-the-key-hash-of-ad\r\nhttps://wicg.github.io/turtledove/#compute-the-key-hash-of-reporting-id",
              "createdAt": "2024-08-29T20:14:16Z",
              "updatedAt": "2024-08-29T20:14:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6HTvXN",
          "commit": {
            "abbreviatedOid": "ade4554"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T20:14:32Z",
          "updatedAt": "2024-08-29T20:14:32Z",
          "comments": [
            {
              "originalPosition": 368,
              "body": "https://wicg.github.io/turtledove/#compute-the-key-hash-of-component-ad",
              "createdAt": "2024-08-29T20:14:32Z",
              "updatedAt": "2024-08-29T20:14:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6H6pX_",
          "commit": {
            "abbreviatedOid": "dd1080d"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T13:50:51Z",
          "updatedAt": "2024-09-04T13:56:09Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "This needs a description, e.g.:\r\nThis interest group's name, see https://wicg.github.io/turtledove/#interest-group-name",
              "createdAt": "2024-09-04T13:50:52Z",
              "updatedAt": "2024-09-04T13:56:09Z"
            },
            {
              "originalPosition": 171,
              "body": "This needs a description, e.g.:\r\nKeys used to look up real-time bidding signals, see https://wicg.github.io/turtledove/#interest-group-trusted-bidding-signals-keys",
              "createdAt": "2024-09-04T13:52:37Z",
              "updatedAt": "2024-09-04T13:56:09Z"
            },
            {
              "originalPosition": 172,
              "body": "This needs a description, e.g.:\r\nData about the user that the bidder can use during bid calculation, see https://wicg.github.io/turtledove/#interest-group-user-bidding-signals",
              "createdAt": "2024-09-04T13:54:00Z",
              "updatedAt": "2024-09-04T13:56:09Z"
            },
            {
              "originalPosition": 174,
              "body": "Ads and components need descriptions too.  Hmm, @brusshamilton, is `adRenderId` missing from the PA spec?",
              "createdAt": "2024-09-04T13:56:04Z",
              "updatedAt": "2024-09-04T13:56:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6H-EIQ",
          "commit": {
            "abbreviatedOid": "dd1080d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T20:38:42Z",
          "updatedAt": "2024-09-04T20:38:42Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "As of https://github.com/WICG/turtledove/pull/1258, it's not missing.",
              "createdAt": "2024-09-04T20:38:42Z",
              "updatedAt": "2024-09-04T20:38:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Ij8dl",
          "commit": {
            "abbreviatedOid": "dd1080d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T23:47:42Z",
          "updatedAt": "2024-09-09T23:47:42Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "adRenderId is defined in the `Common Definitions` section of this PR",
              "createdAt": "2024-09-09T23:47:42Z",
              "updatedAt": "2024-09-09T23:47:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOMnZLVc56saUL",
      "title": "Add description of basic payload optimization",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/3",
      "state": "MERGED",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-06T17:59:25Z",
      "updatedAt": "2024-09-11T18:24:17Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "4e5b5f0f4081f3b6e4718d5a8f2c14430de9e0bf",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "payload-optimization",
      "headRefOid": "7734be16cdb08a1e972b39e7820bee4dff26443b",
      "closedAt": "2024-09-11T18:24:16Z",
      "mergedAt": "2024-09-11T18:24:16Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "9e068afd23bc5c9cabaa1aa6097d23cf72399388"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6ItWss",
          "commit": {
            "abbreviatedOid": "846c610"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-10T19:25:43Z",
          "updatedAt": "2024-09-10T19:25:44Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "when you say 'individually compressed' does that mean each list of interest groups, or each interest group in the list? can you tweak the phrasing here to clarify",
              "createdAt": "2024-09-10T19:25:44Z",
              "updatedAt": "2024-09-10T19:25:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6ItWz0",
          "commit": {
            "abbreviatedOid": "846c610"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-10T19:25:58Z",
          "updatedAt": "2024-09-10T19:25:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLVc6Itz7u",
          "commit": {
            "abbreviatedOid": "846c610"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-10T20:30:32Z",
          "updatedAt": "2024-09-10T20:30:32Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Fixed.",
              "createdAt": "2024-09-10T20:30:32Z",
              "updatedAt": "2024-09-10T20:30:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOMnZLVc57YbFI",
      "title": "Update response payload and misc serialization details",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/4",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The major work items left:\r\n1. Work through all of the TODOs in the W3C spec that mention this document and make sure that the W3C spec has clear sections that it can reference.\r\n2. Verify that the request and response message structures are in-sync with the W3C spec.\r\n3. Resolve remaining TODOs in this spec.\r\n4. Solicit feedback for any other sections that may be missing from the spec.\r\n5. Increase the amount of detail in the compression and decompression sections to resolve any ambiguity.\r\n6. Increase the amount of detail in the encryption and decryption sections to resolve any ambiguity.\r\n",
      "createdAt": "2024-09-13T04:12:42Z",
      "updatedAt": "2024-09-23T14:37:16Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "9e068afd23bc5c9cabaa1aa6097d23cf72399388",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "dankocoj-details",
      "headRefOid": "6567b446dafac41e33fab8e17829881ca093b85a",
      "closedAt": "2024-09-23T14:36:28Z",
      "mergedAt": "2024-09-23T14:36:28Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "5eea62211ca123ebcd5645c76c360babb6406cc4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6Jq5e0",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T13:12:12Z",
          "updatedAt": "2024-09-17T13:30:21Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Perhaps not worth addressing in this PR, but \"a single auction\" is a somewhat vague term as it probably is really a single component auction or top-level auction with no component auctions.  You could say \"a Protected Audience auction for one seller\" but then it sounds like we don't support multiple sellers, which we do.",
              "createdAt": "2024-09-17T13:12:12Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 92,
              "body": "I think we may want to say that the keys are provided by the browser, and make then an explicit input to the request creation logic.",
              "createdAt": "2024-09-17T13:13:50Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 102,
              "body": "Maybe not for this PR, but I'd start by defining a really simple context that is a struct containing simply the HPKE context.  We can add things to it later.",
              "createdAt": "2024-09-17T13:15:44Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 65,
              "body": "To make this consistent with the title below.  I think it's also good to be consistent with our use of \"services\" rather than \"server\" but I don't feel strongly.\r\n```suggestion\r\n## Browser to Bidding and Auction Services {#browser-to-server}\r\n\r\n```",
              "createdAt": "2024-09-17T13:18:15Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 135,
              "body": "I feel like this section needs more structure, e.g. we could list out some high level steps here that link to the sections below, like:\r\n1. we need to define inputs to this process, which should include some blob of data and the context that was produced by the browser-to-server section.\r\n2. is there some header we are processing first?  do we need to check the version etc?\r\n3. do we do decryption next? if so we should link to that section\r\n4. do we do decompression next? if so we should link to that section",
              "createdAt": "2024-09-17T13:24:03Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 164,
              "body": "This section defines a format and I guess the implication is that we parse the CBOR into this schema/format.  So what's the output of this section that the browser is going to accept? is it just the parsed structure?",
              "createdAt": "2024-09-17T13:27:15Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            },
            {
              "originalPosition": 73,
              "body": "I think we need to be clearer about what the inputs to this section are and exactly how they get placed into this schema.  The W3C spec produces a map from IG-owner to IGs and I think this section needs to specify how that map goes into this CDDL.  Perhaps this is not for this PR.",
              "createdAt": "2024-09-17T13:30:14Z",
              "updatedAt": "2024-09-17T13:30:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JtC8A",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:45:13Z",
          "updatedAt": "2024-09-17T16:45:15Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I will remove it for now since I think it's better to err on 'not enough detail' than 'slightly incorrect detail'. ",
              "createdAt": "2024-09-17T16:45:14Z",
              "updatedAt": "2024-09-17T16:45:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JtEbh",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:48:25Z",
          "updatedAt": "2024-09-17T16:48:27Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Adding a TODO, will address as a separate PR",
              "createdAt": "2024-09-17T16:48:26Z",
              "updatedAt": "2024-09-17T16:48:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JtHqC",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:54:17Z",
          "updatedAt": "2024-09-17T16:54:18Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "That is a great question, I actually didn't ever think about that. @brusshamilton maybe you can give me a code pointer? ",
              "createdAt": "2024-09-17T16:54:17Z",
              "updatedAt": "2024-09-17T16:54:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JtJga",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:58:11Z",
          "updatedAt": "2024-09-17T16:58:12Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "![image](https://github.com/user-attachments/assets/0e030412-eced-43dd-99df-60c41c4cbb63)\r\nSo I have been relying on the structure and prose in each section here to guide the user through the sequence of steps. But i will add more discussion re inputs (blob, header, hpke context).  ",
              "createdAt": "2024-09-17T16:58:11Z",
              "updatedAt": "2024-09-17T16:58:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JtJ3E",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:58:57Z",
          "updatedAt": "2024-09-17T16:58:58Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "I think I see what you are saying though, a simple explicit list of the steps makes sense.",
              "createdAt": "2024-09-17T16:58:58Z",
              "updatedAt": "2024-09-17T16:58:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6JuOow",
          "commit": {
            "abbreviatedOid": "aa7b047"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T18:55:22Z",
          "updatedAt": "2024-09-17T18:55:22Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "https://wicg.github.io/turtledove/#dom-navigator-getinterestgroupadauctiondata is where our web spec assembles the map to be passed to this spec.\r\nhttps://pr-preview.s3.amazonaws.com/brusshamilton/turtledove/pull/1276.html#ref-for-auction-config-server-response%E2%91%A2 is where our web spec uses the IETF spec to process the response blob into a struct like this: https://pr-preview.s3.amazonaws.com/brusshamilton/turtledove/pull/1276.html#server-auction-response",
              "createdAt": "2024-09-17T18:55:22Z",
              "updatedAt": "2024-09-17T18:55:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J1bhX",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T12:05:14Z",
          "updatedAt": "2024-09-18T12:45:30Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "This is pretty vague and I'm not sure why it's in a list of one.  I think you want to refer directly to the \"request\" object in the {{request-payload}} section.  The \"request\" object has version and generationId fields that I think we need to explain what values go into as I don't think the browser defines them?",
              "createdAt": "2024-09-18T12:05:14Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 79,
              "body": "I don't think we want this to be just an HPKE context.  We want this to be an opaque context object that we define in this spec.  We can start by defining it as a struct or object that contains an HPKE context and a copy of the interest group inputs.",
              "createdAt": "2024-09-18T12:06:37Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 80,
              "body": "is bytestring a known term?",
              "createdAt": "2024-09-18T12:07:24Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 75,
              "body": "We also need to take the encryption key as an input.",
              "createdAt": "2024-09-18T12:08:10Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 121,
              "body": "I can't figure out how the HPKE spec defines this.\r\nChrome code uses this context: https://source.chromium.org/chromium/chromium/src/+/main:third_party/boringssl/src/include/openssl/hpke.h;l=367;drc=a150b50c0ff706af12c449c7fccd3cf2745e2061;bpv=1;bpt=1\r\nPerhaps we want to just say it's defined in the https://www.rfc-editor.org/rfc/rfc9180.html#name-creating-the-encryption-con and not try and specify it with CDDL.  I don't think there's a need to specify it with CDDL as it's not getting transmitted or saved in CBOR.",
              "createdAt": "2024-09-18T12:29:15Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 180,
              "body": "I don't think we want the browser to know anything about HPKE.  I think we want to specify the input to {{services-to-browser}} as an opaque context that contains the HPKE context and the original interest groups.",
              "createdAt": "2024-09-18T12:31:14Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 204,
              "body": "I don't think we want the browser to do this.  I think we want to define the steps in this spec for how this is done.\r\nMany fields are easy to convert, e.g. adRenderURL goes straight to \"ad render url\", as do bid and score as well.\r\nFor biddingGroups, we need to convert the ints back into interest group names using the original interest groups that we stored in the opaque context when we did the encoding.\r\nIt might be good to start by copying the list of field names from https://pr-preview.s3.amazonaws.com/brusshamilton/turtledove/pull/1276.html#server-auction-response and then listing out how each is filled in.",
              "createdAt": "2024-09-18T12:42:47Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            },
            {
              "originalPosition": 226,
              "body": "I don't know if we want to spec the update piece yet as it's not part of the W3C spec yet.",
              "createdAt": "2024-09-18T12:43:42Z",
              "updatedAt": "2024-09-18T12:45:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J4ORv",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T16:28:24Z",
          "updatedAt": "2024-09-18T16:28:24Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Will add a TODO in the request object to define these fields -- from my understanding, they are supposed to come from the browser. @brusshamilton will you include these in the w3c spec? Also updating the doc structure a bit to be able to link to the request object more directly.",
              "createdAt": "2024-09-18T16:28:24Z",
              "updatedAt": "2024-09-18T16:28:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J4Rc9",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T16:34:13Z",
          "updatedAt": "2024-09-18T16:34:13Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Should be two words, fixing everywhere",
              "createdAt": "2024-09-18T16:34:13Z",
              "updatedAt": "2024-09-18T16:34:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J6fbP",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T21:11:46Z",
          "updatedAt": "2024-09-18T21:11:46Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "I've linked to that definition a few lines above. I will remove the cddl. ",
              "createdAt": "2024-09-18T21:11:46Z",
              "updatedAt": "2024-09-18T21:11:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J6gkI",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T21:14:01Z",
          "updatedAt": "2024-09-18T21:14:02Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "I see, going to try to move some of the 'HPKE context' references to 'context blob' and update the description in the {{services-to-browser}} section so it's clear that the browser knows nothing about the blob other than it being 'context'. ",
              "createdAt": "2024-09-18T21:14:01Z",
              "updatedAt": "2024-09-18T21:14:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J6jJ5",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T21:20:21Z",
          "updatedAt": "2024-09-18T21:20:22Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "'copy of the interest group inputs' \r\n- I understand that's necessary so we can perform index matching (the response has some fields that just return an index number that we have to somehow match to an IG name), but I am not sure if that should go in the IETF spec or the w3c spec. @brusshamilton can you take point on this specific aspect? I also don't know what to do with `request ID`: https://pr-preview.s3.amazonaws.com/brusshamilton/turtledove/pull/1276.html#server-auction-request-context. ",
              "createdAt": "2024-09-18T21:20:21Z",
              "updatedAt": "2024-09-18T21:20:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J6pOA",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T21:33:23Z",
          "updatedAt": "2024-09-18T21:33:23Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "more discussion here: https://github.com/privacysandbox/draft-ietf-protected-audience-auction-service/pull/4#discussion_r1765737519 , will udpate based on results.",
              "createdAt": "2024-09-18T21:33:23Z",
              "updatedAt": "2024-09-18T21:33:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J6zyD",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T21:58:43Z",
          "updatedAt": "2024-09-18T21:58:44Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "The `request context` is going to be defined in the IETF spec. The IETF spec doesn't use the `request ID`.",
              "createdAt": "2024-09-18T21:58:44Z",
              "updatedAt": "2024-09-18T21:58:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J62oX",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T22:07:55Z",
          "updatedAt": "2024-09-18T22:07:55Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "ok. What should the fields of request context be?",
              "createdAt": "2024-09-18T22:07:55Z",
              "updatedAt": "2024-09-18T22:07:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J65jk",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T22:19:29Z",
          "updatedAt": "2024-09-18T22:19:29Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "It should probably contain whatever you need to reconstruct the response. So, probably the HPKE context and a map from origin to the list of interest groups included in the request. I don't think we need CDDL for that, since it's just internal types.",
              "createdAt": "2024-09-18T22:19:29Z",
              "updatedAt": "2024-09-18T22:19:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6J656s",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T22:21:04Z",
          "updatedAt": "2024-09-18T22:21:05Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "The generation ID and version are going to be from this spec, as they are specific to this serialization format.",
              "createdAt": "2024-09-18T22:21:04Z",
              "updatedAt": "2024-09-18T22:21:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KCvou",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T15:58:33Z",
          "updatedAt": "2024-09-19T15:58:33Z",
          "comments": [
            {
              "originalPosition": 226,
              "body": "@brusshamilton suggested this a few weeks ago, but Russ can I get an update on if we want this in the first draft? ",
              "createdAt": "2024-09-19T15:58:33Z",
              "updatedAt": "2024-09-19T15:58:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KCyC5",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T15:59:31Z",
          "updatedAt": "2024-09-19T15:59:31Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "makes sense, thanks for your thoughtful reviews Paul. Updated the context description and added a todo here for the next CL (it should be very quick IIUC)",
              "createdAt": "2024-09-19T15:59:31Z",
              "updatedAt": "2024-09-19T15:59:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KCydR",
          "commit": {
            "abbreviatedOid": "bd4321d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T15:59:49Z",
          "updatedAt": "2024-09-19T15:59:49Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "ok, added a TODO and will update in the next CL.",
              "createdAt": "2024-09-19T15:59:49Z",
              "updatedAt": "2024-09-19T15:59:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KCEZO",
          "commit": {
            "abbreviatedOid": "c6cb559"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T14:51:42Z",
          "updatedAt": "2024-09-19T19:53:42Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": ">Details on how to acquire [HPKE] keys are out of scope\r\n\r\nThese are inputs to the algorithm, so they seem in scope. Also there probably shouldn't be a requirement that the user of this API be a browser.",
              "createdAt": "2024-09-19T14:51:42Z",
              "updatedAt": "2024-09-19T19:53:42Z"
            },
            {
              "originalPosition": 226,
              "body": "Yes, we can include that modification for M131.",
              "createdAt": "2024-09-19T17:15:42Z",
              "updatedAt": "2024-09-19T19:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KFruG",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T21:04:08Z",
          "updatedAt": "2024-09-19T21:04:08Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "Do you or @JensenPaul have a recommendation on what to use other than browser? Is there an IETF standard word for 'entity that is using the spec'",
              "createdAt": "2024-09-19T21:04:08Z",
              "updatedAt": "2024-09-19T21:04:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KFsru",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T21:06:57Z",
          "updatedAt": "2024-09-19T21:06:57Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "Also re hpke, I'm not sure we generally want to prescribe how any browser/software should get them, just that they need to provide a [Key Configuration](https://www.rfc-editor.org/rfc/rfc9458#name-key-configuration) as input. Let me know if you disagree. ",
              "createdAt": "2024-09-19T21:06:57Z",
              "updatedAt": "2024-09-19T21:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KM5sj",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:40:27Z",
          "updatedAt": "2024-09-20T15:40:28Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "I think for now we can standardize the Key configuration (other than the key identifier and the public key, which are inputs). Currently Chrome and the server only handle a specific configuration, so it doesn't make sense for the standard to require more flexibility.\r\n\r\nA user of the spec would be called an implementation, though I would divide users of the spec into a client implementation and server implementation. The client generates the request, and parses the response. The server parses the request and generates the response.",
              "createdAt": "2024-09-20T15:40:27Z",
              "updatedAt": "2024-09-20T15:40:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KN9St",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:56:09Z",
          "updatedAt": "2024-09-20T17:56:10Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "\"client\" and \"server\" sound good to me.",
              "createdAt": "2024-09-20T17:56:09Z",
              "updatedAt": "2024-09-20T17:56:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KN_BE",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:58:30Z",
          "updatedAt": "2024-09-20T17:58:30Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "ok, I'll update. I can add a blurb in {#common-definitions}\r\nthat makes sure the reader knows exactly what we mean by client and server.",
              "createdAt": "2024-09-20T17:58:30Z",
              "updatedAt": "2024-09-20T17:58:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KOG9d",
          "commit": {
            "abbreviatedOid": "681566d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T18:07:14Z",
          "updatedAt": "2024-09-20T18:07:14Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "Typically those definitions are in the {#Terminology} section. ",
              "createdAt": "2024-09-20T18:07:14Z",
              "updatedAt": "2024-09-20T18:07:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KN_h7",
          "commit": {
            "abbreviatedOid": "de5a7fd"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:58:58Z",
          "updatedAt": "2024-09-20T19:32:54Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "This doesn't make sense to me.  I think # 1 here is the output of some steps we need to define in this spec, and # 2 here is the input to those steps.",
              "createdAt": "2024-09-20T17:58:58Z",
              "updatedAt": "2024-09-20T19:32:55Z"
            },
            {
              "originalPosition": 94,
              "body": "As I said in a previous comment, this context is not just an hpke-context, it needs to be an opaque object that has both the hpke-context and some other stuff (for now a copy of the map from IG owner to IGs.",
              "createdAt": "2024-09-20T18:00:03Z",
              "updatedAt": "2024-09-20T19:32:55Z"
            },
            {
              "originalPosition": 168,
              "body": "Should this link \"encryption context\" to the prior section?",
              "createdAt": "2024-09-20T18:01:22Z",
              "updatedAt": "2024-09-20T19:32:55Z"
            },
            {
              "originalPosition": 147,
              "body": "I don't think \"encryption context\" is the right name for this.  The IG map isn't used for encrypting; it's used for decoding the response.",
              "createdAt": "2024-09-20T19:32:09Z",
              "updatedAt": "2024-09-20T19:32:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KQG1I",
          "commit": {
            "abbreviatedOid": "de5a7fd"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T22:36:27Z",
          "updatedAt": "2024-09-20T22:36:27Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "Yeah, sorry this should be Request context (and updates are required to line 158). Request Context should be its own section outside of Encryption.",
              "createdAt": "2024-09-20T22:36:27Z",
              "updatedAt": "2024-09-20T22:36:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Kbl0K",
          "commit": {
            "abbreviatedOid": "de5a7fd"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T14:37:16Z",
          "updatedAt": "2024-09-23T14:37:16Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "See Russ's updates.",
              "createdAt": "2024-09-23T14:37:16Z",
              "updatedAt": "2024-09-23T14:37:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOMnZLVc58OeOO",
      "title": "Request serialization",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/5",
      "state": "MERGED",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Refactor request format - separate description from sample implementation of client.",
      "createdAt": "2024-09-21T01:41:26Z",
      "updatedAt": "2024-09-23T14:35:43Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "dankocoj-details",
      "baseRefOid": "e60ecd98240d72072296b3fa82c1c5d4283fcf4c",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "requestSerialization",
      "headRefOid": "72be092d5b2c0e50a96b2fe1b6b3d49e5ff6f5b0",
      "closedAt": "2024-09-23T14:35:40Z",
      "mergedAt": "2024-09-23T14:35:40Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "6567b446dafac41e33fab8e17829881ca093b85a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOMnZLVc58S2za",
      "title": "Add response processing steps",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/6",
      "state": "MERGED",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-22T19:56:09Z",
      "updatedAt": "2024-09-23T14:35:00Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "requestSerialization",
      "baseRefOid": "a757e07773281ab446115dc14c2b0ff84fcea0ce",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "responseParsing",
      "headRefOid": "ab9ae8726f099fa1ea12325aca7aa6025fb43625",
      "closedAt": "2024-09-23T14:34:58Z",
      "mergedAt": "2024-09-23T14:34:58Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "72be092d5b2c0e50a96b2fe1b6b3d49e5ff6f5b0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOMnZLVc58TNc0",
      "title": "add server parsing request steps",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/7",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-23T00:35:28Z",
      "updatedAt": "2024-09-24T17:56:39Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "5eea62211ca123ebcd5645c76c360babb6406cc4",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "serverRequestParsing",
      "headRefOid": "37446f283858c46ba8cbef44283d797ab9bf058d",
      "closedAt": "2024-09-24T17:56:37Z",
      "mergedAt": "2024-09-24T17:56:37Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "483bae903d359f788bc66602fa45306b01caef68"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6KdzG7",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T18:50:58Z",
          "updatedAt": "2024-09-23T20:04:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "We probably want to use MUST here, since parsing behavior is very important for interoperability.",
              "createdAt": "2024-09-23T18:50:59Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 12,
              "body": "Also the HPKE context is an output.",
              "createdAt": "2024-09-23T18:51:44Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 9,
              "body": "\\`private key\\`",
              "createdAt": "2024-09-23T18:53:19Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 9,
              "body": "Though, actually the input should be a list of private keys (and the corresponding key ID). The decryption has a step where it looks up the key by the key ID (which is extracted from the request).",
              "createdAt": "2024-09-23T18:55:25Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 17,
              "body": "I'm not sure about defining a macro here. Maybe it would make sense to describe how failures during parsing are handled in a different section. Then through here you could just \"return failure\" on error.\r\n\r\n```\r\n#### Request error handling\r\n\r\nIf {{request-parsing}} returns with failure, the server MUST respond as follows:\r\n1. If the failure happens before or during decryption, then...\r\n2. Otherwise abort processing this request and instead response with...\r\n```",
              "createdAt": "2024-09-23T19:24:59Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 19,
              "body": "De-encapsulate (or unwrap, extract, etc).",
              "createdAt": "2024-09-23T19:27:01Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 21,
              "body": "Does it make sense to return a \"response\" here? Maybe just return failure.",
              "createdAt": "2024-09-23T19:30:40Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 25,
              "body": ">If reading the byte fails\r\n\r\nWhy would reading the byte fail? Typically we write this as if handling a buffer, not reading a file. I guess you could check that the received message is longer than the framing header.",
              "createdAt": "2024-09-23T19:41:39Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 26,
              "body": "I think it's okay to assume version=0, but I'm not sure why we would define a compression type (Brotli) that we don't support.\r\n\r\nIt may be better to say \"verify the compression is one of the types supported\" and then in the compression section specify that GZIP MUST be implemented and Brotli MAY be implemented.",
              "createdAt": "2024-09-23T19:43:42Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 25,
              "body": "Feel free to copy the way I wrote the client's response parsing for framing:\r\n```\r\nRemove and extract the first 5 bytes from `framed response` as the\r\n`framing header` (described in {{framing}}), removing them from\r\n`framed response`.\r\n```",
              "createdAt": "2024-09-23T19:46:19Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 38,
              "body": "So the publisher does not have to be a URL or ORIGIN? You don't check for that here.",
              "createdAt": "2024-09-23T19:47:11Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 39,
              "body": "Do you check if the generationId is a valid UUID?",
              "createdAt": "2024-09-23T19:47:34Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 50,
              "body": "Do you check if key is a valid Origin?",
              "createdAt": "2024-09-23T19:48:25Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 62,
              "body": "What happens if this string is not valid JSON? Are you checking it anywhere?",
              "createdAt": "2024-09-23T19:51:43Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 81,
              "body": "Is there a limit to the range of this integer? I thought B&A only supported 32 bit values here. (likewise for other integer fields)",
              "createdAt": "2024-09-23T19:54:25Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            },
            {
              "originalPosition": 118,
              "body": "This is just a subset of {{response-message}}. You should just be able to use that instead of repeating a partial schema here.\r\n\r\n```\r\n1. Let `error` be a new map with key-value pairs `[(\"code\", 400), (\"error\", error_msg)]`.\r\n1. Let `response` be a new {{response-message}}.\r\n1. Set `response[\"error\"]` to `error`.\r\n1. Serialize and send `response` to the client per {{services-to-client}}.\r\n```",
              "createdAt": "2024-09-23T20:02:17Z",
              "updatedAt": "2024-09-23T20:04:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KepX0",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T20:54:35Z",
          "updatedAt": "2024-09-23T20:54:35Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "does Chrome support Brotli? I do not think the servers do. ",
              "createdAt": "2024-09-23T20:54:35Z",
              "updatedAt": "2024-09-23T20:54:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Ke-3n",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T21:27:42Z",
          "updatedAt": "2024-09-23T21:27:42Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "We do not",
              "createdAt": "2024-09-23T21:27:42Z",
              "updatedAt": "2024-09-23T21:27:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KgDrp",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T22:56:09Z",
          "updatedAt": "2024-09-23T22:56:10Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "No. Do you think it makes sense for us to still specify this is an origin? I feel like we may want to (and maybe just update the servers to validate) in case of security.",
              "createdAt": "2024-09-23T22:56:09Z",
              "updatedAt": "2024-09-23T22:56:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KgD4R",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T22:56:50Z",
          "updatedAt": "2024-09-23T22:56:51Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "We don't check.\r\nSame question: https://github.com/privacysandbox/draft-ietf-protected-audience-auction-service/pull/7#discussion_r1772318059",
              "createdAt": "2024-09-23T22:56:50Z",
              "updatedAt": "2024-09-23T22:56:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KgLra",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T23:32:43Z",
          "updatedAt": "2024-09-23T23:32:43Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "https://github.com/privacysandbox/bidding-auction-servers/blob/722e1542c262dddc3aaf41be7b6c159a38cefd0a/services/seller_frontend_service/util/web_utils.cc#L192\r\n\r\nhttps://github.com/PJK/libcbor/blob/a0582ab2fc41669c73ee82a3400eafaea1ec6b9d/src/cbor/ints.c#L39\r\n\r\nNot sure re 32 bit (it seems we have 64 bit support), I'll ask my teammates.",
              "createdAt": "2024-09-23T23:32:43Z",
              "updatedAt": "2024-09-23T23:32:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KgSOz",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-24T00:06:35Z",
          "updatedAt": "2024-09-24T00:06:35Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "specifying as unsigned 64 bit ints",
              "createdAt": "2024-09-24T00:06:35Z",
              "updatedAt": "2024-09-24T00:06:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KgTza",
          "commit": {
            "abbreviatedOid": "cc4a040"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-24T00:15:22Z",
          "updatedAt": "2024-09-24T00:15:22Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "No, we do not validate it. In this case, for performance reasons, we probably want to skip validation. ",
              "createdAt": "2024-09-24T00:15:22Z",
              "updatedAt": "2024-09-24T00:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KoSZ3",
          "commit": {
            "abbreviatedOid": "37446f2"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-24T16:36:31Z",
          "updatedAt": "2024-09-24T16:36:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOMnZLVc58ZCXi",
      "title": "minor cleanups",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/8",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-23T15:40:37Z",
      "updatedAt": "2024-09-23T18:53:38Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "5eea62211ca123ebcd5645c76c360babb6406cc4",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "minorNits",
      "headRefOid": "21b209efce4f3f329fa050c9c034ffb7fb6377f1",
      "closedAt": "2024-09-23T18:53:37Z",
      "mergedAt": "2024-09-23T18:53:37Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "bbab92bf7a525a2ff52b0020fbb981c0815803a6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6KduzG",
          "commit": {
            "abbreviatedOid": "21b209e"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-23T18:41:46Z",
          "updatedAt": "2024-09-23T18:41:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOMnZLVc58Z9Sx",
      "title": "add response generation details",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/9",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-23T18:00:21Z",
      "updatedAt": "2024-09-24T00:31:44Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "serverRequestParsing",
      "baseRefOid": "5fe1dfaf8f01226930b89f582984b1604ab01a65",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "serverResponseGeneration",
      "headRefOid": "f9ee565a37b12aeb12b6f90e681fc062947c6840",
      "closedAt": "2024-09-24T00:31:43Z",
      "mergedAt": "2024-09-24T00:31:43Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "37446f283858c46ba8cbef44283d797ab9bf058d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6Kdvg-",
          "commit": {
            "abbreviatedOid": "a21073d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T18:43:20Z",
          "updatedAt": "2024-09-23T18:49:24Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Add more details about framing fields.",
              "createdAt": "2024-09-23T18:43:20Z",
              "updatedAt": "2024-09-23T18:49:24Z"
            },
            {
              "originalPosition": 22,
              "body": "Are we going to suggest/require deterministically encoded CBOR?",
              "createdAt": "2024-09-23T18:43:48Z",
              "updatedAt": "2024-09-23T18:49:24Z"
            },
            {
              "originalPosition": 29,
              "body": "encryption and encapsulation of `encoded payload` **with `rctxt`**?",
              "createdAt": "2024-09-23T18:49:18Z",
              "updatedAt": "2024-09-23T18:49:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6KemuO",
          "commit": {
            "abbreviatedOid": "f3031cc"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-23T20:47:46Z",
          "updatedAt": "2024-09-23T20:48:07Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Should these be separate steps?",
              "createdAt": "2024-09-23T20:47:46Z",
              "updatedAt": "2024-09-23T20:48:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Kewjo",
          "commit": {
            "abbreviatedOid": "f3031cc"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T21:12:48Z",
          "updatedAt": "2024-09-23T21:12:48Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I just saw your comment re framing in the other PR, I'll update here in a similar way.",
              "createdAt": "2024-09-23T21:12:48Z",
              "updatedAt": "2024-09-23T21:12:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOMnZLVc59Rcxx",
      "title": "Make inputs to request generation better match W3C spec",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/10",
      "state": "MERGED",
      "author": "JensenPaul",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-01T15:15:34Z",
      "updatedAt": "2024-10-01T18:41:42Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "d6f3bef3558384b9c20d5e50d4a8f622a0e500b4",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "JensenPaul-patch-1",
      "headRefOid": "addc9acc46475fbf0713d31a86959dec084bc506",
      "closedAt": "2024-10-01T18:41:40Z",
      "mergedAt": "2024-10-01T18:41:40Z",
      "mergedBy": "JensenPaul",
      "mergeCommit": {
        "oid": "ebdfbb9053b2cf208a75d65bf7eab845ca198642"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6LiOKP",
          "commit": {
            "abbreviatedOid": "addc9ac"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T17:39:49Z",
          "updatedAt": "2024-10-01T17:39:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOMnZLVc59SR0-",
      "title": "update KEM spec",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/11",
      "state": "MERGED",
      "author": "dankocoj-google",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-01T17:21:11Z",
      "updatedAt": "2024-10-01T18:08:17Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "d6f3bef3558384b9c20d5e50d4a8f622a0e500b4",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "kem-update",
      "headRefOid": "0003f056270a8325179a76d16bb90b050b944297",
      "closedAt": "2024-10-01T18:08:15Z",
      "mergedAt": "2024-10-01T18:08:15Z",
      "mergedBy": "dankocoj-google",
      "mergeCommit": {
        "oid": "85ce1778bc9c4bb4baba2e9a5c291c57e7963db2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6LiN90",
          "commit": {
            "abbreviatedOid": "0003f05"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T17:39:22Z",
          "updatedAt": "2024-10-01T17:39:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOMnZLVc5-Fe3K",
      "title": "Add support for triggered updates",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/12",
      "state": "MERGED",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-09T13:52:43Z",
      "updatedAt": "2024-10-25T11:59:39Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "ebdfbb9053b2cf208a75d65bf7eab845ca198642",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "triggeredUpdates",
      "headRefOid": "97d3358a061c1d2e73ae6ce6ed7e518f46ef2353",
      "closedAt": "2024-10-25T11:59:38Z",
      "mergedAt": "2024-10-25T11:59:38Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "6b9cab9efb425ca83b02fda73952f0b77281542c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6MhAO1",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:12:44Z",
          "updatedAt": "2024-10-09T15:12:44Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I've been calling this updateIfOlderThanMs in our code - if we want to rename that's ok, but i'll need to patch. Also somewhere in this cddl maybe we should specify this int represents Ms",
              "createdAt": "2024-10-09T15:12:44Z",
              "updatedAt": "2024-10-09T15:13:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhBJA",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:14:11Z",
          "updatedAt": "2024-10-09T15:14:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "is this meant to be a working link or is this forward looking? ",
              "createdAt": "2024-10-09T15:14:11Z",
              "updatedAt": "2024-10-09T15:14:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhUZn",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:45:01Z",
          "updatedAt": "2024-10-09T15:45:01Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "It's forward looking. The current link is here: https://pr-preview.s3.amazonaws.com/brusshamilton/turtledove/pull/1294.html#server-auction-response-update-groups",
              "createdAt": "2024-10-09T15:45:01Z",
              "updatedAt": "2024-10-09T15:45:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhV70",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:47:33Z",
          "updatedAt": "2024-10-09T15:47:33Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "1 more space before iteration",
              "createdAt": "2024-10-09T15:47:33Z",
              "updatedAt": "2024-10-09T15:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhWhB",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:48:34Z",
          "updatedAt": "2024-10-09T15:48:34Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "fine as-is, but why fail and not just continue?",
              "createdAt": "2024-10-09T15:48:34Z",
              "updatedAt": "2024-10-09T15:48:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhW5k",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:49:14Z",
          "updatedAt": "2024-10-09T15:49:15Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "add a parsing failure case?",
              "createdAt": "2024-10-09T15:49:14Z",
              "updatedAt": "2024-10-09T15:49:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhZqM",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:52:54Z",
          "updatedAt": "2024-10-09T15:52:54Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Is it possible not to be able to turn an integer number of milliseconds into a duration? I didn't think I needed to handle that case.",
              "createdAt": "2024-10-09T15:52:54Z",
              "updatedAt": "2024-10-09T15:52:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Mhddk",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T15:59:21Z",
          "updatedAt": "2024-10-09T15:59:21Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Odd. I could have sworn I was working from the design doc, but I couldn't find a reference to \"time\" anywhere. It's not really a time (since it's a duration) so I'm open to changing. This feature hasn't launched yet, so I can just put together a fix. That being said, we should try to keep the field names short since they are encoded in CBOR messages.",
              "createdAt": "2024-10-09T15:59:21Z",
              "updatedAt": "2024-10-09T15:59:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MheRu",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T16:00:48Z",
          "updatedAt": "2024-10-09T16:00:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I see we specify `If `element[\"index\"]` does not exist or is not an integer` so I was thinking the same would apply to the time here, but your call. ",
              "createdAt": "2024-10-09T16:00:48Z",
              "updatedAt": "2024-10-09T16:00:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Mhe1j",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T16:01:49Z",
          "updatedAt": "2024-10-09T16:01:49Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Done.",
              "createdAt": "2024-10-09T16:01:49Z",
              "updatedAt": "2024-10-09T16:01:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Mhe9I",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T16:02:01Z",
          "updatedAt": "2024-10-09T16:02:02Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "That's a copypasta bug. Fixed.",
              "createdAt": "2024-10-09T16:02:01Z",
              "updatedAt": "2024-10-09T16:02:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6MhlPv",
          "commit": {
            "abbreviatedOid": "97d3358"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-09T16:13:22Z",
          "updatedAt": "2024-10-09T16:13:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLVc6Mh0SH",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T16:38:04Z",
          "updatedAt": "2024-10-09T16:38:04Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "We check the updateIfOlderThanMs field is an integer in the same step as the check on that the index in an integer.",
              "createdAt": "2024-10-09T16:38:04Z",
              "updatedAt": "2024-10-09T16:38:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Mh2Mu",
          "commit": {
            "abbreviatedOid": "04d7b11"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T16:42:11Z",
          "updatedAt": "2024-10-09T16:42:12Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "ah ok I see, thanks.",
              "createdAt": "2024-10-09T16:42:11Z",
              "updatedAt": "2024-10-09T16:42:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOMnZLVc6DWb2j",
      "title": "Add selected reporting id to response",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/14",
      "state": "MERGED",
      "author": "qingxinwu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "add selectedBuyerANdSellerReportingId",
      "createdAt": "2024-11-27T15:01:58Z",
      "updatedAt": "2024-12-12T16:21:12Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "6b9cab9efb425ca83b02fda73952f0b77281542c",
      "headRepository": "qingxinwu/draft-ietf-bidding-and-auction-services",
      "headRefName": "patch-1",
      "headRefOid": "ae73989f757be91de95dad2f0f08754cf6b2144d",
      "closedAt": "2024-12-12T15:12:48Z",
      "mergedAt": "2024-12-12T15:12:48Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "68ddca03d21e697d3e44770667cccc29b0601f53"
      },
      "comments": [
        {
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> LGTM modulo updating the link referenced in your open comment.\r\n\r\ndone.",
          "createdAt": "2024-12-02T20:13:55Z",
          "updatedAt": "2024-12-02T20:13:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6S8Ugn",
          "commit": {
            "abbreviatedOid": "6997ac3"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-27T15:03:18Z",
          "updatedAt": "2024-11-27T15:03:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "update after W3C spec's [pull request](https://github.com/WICG/turtledove/pull/1348) that defines the new field is merged.",
              "createdAt": "2024-11-27T15:03:18Z",
              "updatedAt": "2024-11-27T15:03:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6TZ7j_",
          "commit": {
            "abbreviatedOid": "6997ac3"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM modulo updating the link referenced in your open comment.",
          "createdAt": "2024-12-02T15:34:46Z",
          "updatedAt": "2024-12-02T15:34:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLVc6Tc2mp",
          "commit": {
            "abbreviatedOid": "6997ac3"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-02T20:13:26Z",
          "updatedAt": "2024-12-02T20:13:26Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "done.",
              "createdAt": "2024-12-02T20:13:26Z",
              "updatedAt": "2024-12-02T20:13:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6UlYun",
          "commit": {
            "abbreviatedOid": "ae73989"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-10T16:11:03Z",
          "updatedAt": "2024-12-10T16:11:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOMnZLVc6Dztuf",
      "title": "Add handling of private aggregation paggResponse field in response",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/15",
      "state": "MERGED",
      "author": "qingxinwu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-02T21:34:02Z",
      "updatedAt": "2024-12-17T19:04:21Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "68ddca03d21e697d3e44770667cccc29b0601f53",
      "headRepository": "qingxinwu/draft-ietf-bidding-and-auction-services",
      "headRefName": "patch-2",
      "headRefOid": "538bc718de3c529f9ea3f64fd96cc5c3eecbca13",
      "closedAt": "2024-12-17T18:49:50Z",
      "mergedAt": "2024-12-17T18:49:50Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "688f30f856d6276c96f399b9983d9c92a2c5e2a5"
      },
      "comments": [
        {
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@brusshamilton PTAL, thanks!",
          "createdAt": "2024-12-09T02:43:19Z",
          "updatedAt": "2024-12-09T02:43:19Z"
        },
        {
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@brusshamilton Made some final changes based on w3c's last minute changes. PTAL. Thanks\r\n",
          "createdAt": "2024-12-17T17:04:36Z",
          "updatedAt": "2024-12-17T17:04:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6UlVQM",
          "commit": {
            "abbreviatedOid": "fa9dbf6"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T16:05:31Z",
          "updatedAt": "2024-12-10T16:10:34Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "The extra \"and\" was intentional here, as a way of grouping the key with its key ID. We could change the second \"and\" to \"with\" if you think that would be more clear.",
              "createdAt": "2024-12-10T16:05:31Z",
              "updatedAt": "2024-12-10T16:10:34Z"
            },
            {
              "originalPosition": 7,
              "body": "I would have thought we could calculate `ig pagg coordinators` from the `relevant interest groups`. I think we'd rather do that than have it as a separate argument.",
              "createdAt": "2024-12-10T16:07:09Z",
              "updatedAt": "2024-12-10T16:10:34Z"
            },
            {
              "originalPosition": 21,
              "body": "Would it make more sense to expand `included_groups` to be a list of (name, pagg coordinator) pairs? That would avoid the extra redundancy.",
              "createdAt": "2024-12-10T16:08:29Z",
              "updatedAt": "2024-12-10T16:10:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6U3nmd",
          "commit": {
            "abbreviatedOid": "fa9dbf6"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-12T04:57:48Z",
          "updatedAt": "2024-12-16T00:18:59Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I made it separate because `relevant interest groups` will be serialized to the request, but the coordinator will not. We can do that, but then we need to remove coordinator from all IGs in `relevant interest groups` after calculating ig pagg coordinators here. Not sure if it's worthwhile adding the extra complication, and the extra parameter does not affect things since it's only an internal algorithm. WDTY?",
              "createdAt": "2024-12-12T04:57:48Z",
              "updatedAt": "2024-12-16T00:18:59Z"
            },
            {
              "originalPosition": 10,
              "body": "ah didn't notice that.",
              "createdAt": "2024-12-12T05:02:26Z",
              "updatedAt": "2024-12-16T00:18:59Z"
            },
            {
              "originalPosition": 21,
              "body": "Do you mean let included_groups[owner]'s value be a list of (ig, coordinator) pairs? Sure we can do that, with an extra step to combine `interest group list` and `coordinator`. If that sounds good, I can make the change.",
              "createdAt": "2024-12-16T00:18:55Z",
              "updatedAt": "2024-12-16T00:18:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VdQaQ",
          "commit": {
            "abbreviatedOid": "16d15b6"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T22:23:03Z",
          "updatedAt": "2024-12-16T22:29:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "We serialize specific fields from `relevant interest groups`. It's not a problem to have additional fields that don't get serialized.\r\n\r\nI'm not sure I'd classify it as an internal algorithm, since nothing says that only the W3C spec can use this.",
              "createdAt": "2024-12-16T22:23:03Z",
              "updatedAt": "2024-12-16T22:29:05Z"
            },
            {
              "originalPosition": 21,
              "body": "Sorry, I think I was confused with our Chrome implementation. There's no need to include the coordinator there since we are keeping the entire interest group. So instead of using the `ig pagg coordinators` argument, we can just pull the coordinator out of the saved interest group.",
              "createdAt": "2024-12-16T22:27:00Z",
              "updatedAt": "2024-12-16T22:29:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Ve5UT",
          "commit": {
            "abbreviatedOid": "fa9dbf6"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T05:48:05Z",
          "updatedAt": "2024-12-17T05:48:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "but it seems step 10.4 of https://privacysandbox.github.io/draft-ietf-bidding-and-auction-services/draft-ietf-bidding-and-auction-services.html#section-2.2.4 serialized everything",
              "createdAt": "2024-12-17T05:48:05Z",
              "updatedAt": "2024-12-17T05:48:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Ve7el",
          "commit": {
            "abbreviatedOid": "16d15b6"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T05:56:08Z",
          "updatedAt": "2024-12-17T05:56:15Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "the field is only used by this spec in \"parse response\", so it needs to be available in `request context`. But if we want to add it to be part of included_groups (as what's being discussed in the other comment), then we don't need this extra field.",
              "createdAt": "2024-12-17T05:56:08Z",
              "updatedAt": "2024-12-17T05:56:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Vk1sy",
          "commit": {
            "abbreviatedOid": "fa9dbf6"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T16:42:04Z",
          "updatedAt": "2024-12-17T16:42:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Ah, I didn't realize we weren't explicitly serializing it. Then I guess we do need to pass it separately.",
              "createdAt": "2024-12-17T16:42:04Z",
              "updatedAt": "2024-12-17T16:42:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Vk2Lm",
          "commit": {
            "abbreviatedOid": "fa9dbf6"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T16:42:52Z",
          "updatedAt": "2024-12-17T16:42:52Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "From the other comment's discussion, adding the coordinators to the context link this seems to be the least-bad option right now.",
              "createdAt": "2024-12-17T16:42:52Z",
              "updatedAt": "2024-12-17T16:42:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6Vk2Sj",
          "commit": {
            "abbreviatedOid": "16d15b6"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-17T16:43:03Z",
          "updatedAt": "2024-12-17T16:43:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLVc6VlHpG",
          "commit": {
            "abbreviatedOid": "538bc71"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-17T17:06:39Z",
          "updatedAt": "2024-12-17T17:06:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOMnZLVc6ElxSX",
      "title": "Add support for k-anonymity enforcement",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/16",
      "state": "OPEN",
      "author": "brusshamilton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Adds fields needed for k-anonymity enforcement support.\r\nAdjusts request/response processing to generate/parse these additional fields.\r\n\r\nNote: Links to new W3C structures are notional and depend on https://github.com/WICG/turtledove/pull/1360.",
      "createdAt": "2024-12-09T19:08:03Z",
      "updatedAt": "2024-12-18T17:00:29Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "6b9cab9efb425ca83b02fda73952f0b77281542c",
      "headRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "headRefName": "KAnon",
      "headRefOid": "fbba49300a399a94d3bbb2c3c3205f5e27df0e81",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6Uas6b",
          "commit": {
            "abbreviatedOid": "ad05bb2"
          },
          "author": "dankocoj-google",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-09T20:37:49Z",
          "updatedAt": "2024-12-09T20:43:16Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "indent?",
              "createdAt": "2024-12-09T20:37:49Z",
              "updatedAt": "2024-12-09T20:43:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VaAcP",
          "commit": {
            "abbreviatedOid": "ad05bb2"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T16:01:29Z",
          "updatedAt": "2024-12-16T16:01:29Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "Fixed.",
              "createdAt": "2024-12-16T16:01:29Z",
              "updatedAt": "2024-12-16T16:01:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOMnZLVc6FGgNZ",
      "title": "Handle debugReports field in response",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/17",
      "state": "MERGED",
      "author": "qingxinwu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "... to support downsampling forDebuggingOnly reports. And send debug report's lockout status in the request as part of enableDebugReports field.",
      "createdAt": "2024-12-13T05:52:52Z",
      "updatedAt": "2024-12-17T19:04:59Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "688f30f856d6276c96f399b9983d9c92a2c5e2a5",
      "headRepository": "qingxinwu/draft-ietf-bidding-and-auction-services",
      "headRefName": "patch-1",
      "headRefOid": "10c98cd45c039381176036fccbaddb522caa346e",
      "closedAt": "2024-12-17T19:04:36Z",
      "mergedAt": "2024-12-17T19:04:36Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "9b67a11e9b4b83e6d55e3262748e71373e68d48f"
      },
      "comments": [
        {
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@brusshamilton ready for review. PTAL. Thanks!",
          "createdAt": "2024-12-13T18:17:58Z",
          "updatedAt": "2024-12-13T18:17:58Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6VF7lf",
          "commit": {
            "abbreviatedOid": "d028f8b"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T05:54:38Z",
          "updatedAt": "2024-12-13T05:54:38Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "Question: should we do https check in the IETF spec?",
              "createdAt": "2024-12-13T05:54:38Z",
              "updatedAt": "2024-12-13T05:54:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VLb0c",
          "commit": {
            "abbreviatedOid": "d028f8b"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T17:29:39Z",
          "updatedAt": "2024-12-13T17:29:39Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I think it makes more sense to check for a \"possibly trustworthy\" URL in the W3C spec.",
              "createdAt": "2024-12-13T17:29:39Z",
              "updatedAt": "2024-12-13T17:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VLuPS",
          "commit": {
            "abbreviatedOid": "d028f8b"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T18:17:27Z",
          "updatedAt": "2024-12-13T18:17:27Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "ack. Thanks.",
              "createdAt": "2024-12-13T18:17:27Z",
              "updatedAt": "2024-12-13T18:17:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VLwLu",
          "commit": {
            "abbreviatedOid": "0aa0882"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T18:22:49Z",
          "updatedAt": "2024-12-13T18:29:39Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "We probably shouldn't be removing this, right?",
              "createdAt": "2024-12-13T18:22:49Z",
              "updatedAt": "2024-12-13T18:29:39Z"
            },
            {
              "originalPosition": 61,
              "body": "We probably should keep the comma and selectedBuyerAndSellerReportingId parts.",
              "createdAt": "2024-12-13T18:24:12Z",
              "updatedAt": "2024-12-13T18:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VMGv3",
          "commit": {
            "abbreviatedOid": "0aa0882"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T19:24:23Z",
          "updatedAt": "2024-12-13T19:24:23Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "so weird, it seems this branch did pick up the contents from the most recent PR merge, but then tried to remove all of them here. I manually added them back, but don't understand what's happening.",
              "createdAt": "2024-12-13T19:24:23Z",
              "updatedAt": "2024-12-13T19:29:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VMKEI",
          "commit": {
            "abbreviatedOid": "0aa0882"
          },
          "author": "qingxinwu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T19:29:07Z",
          "updatedAt": "2024-12-13T19:29:07Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "added back. Weird",
              "createdAt": "2024-12-13T19:29:07Z",
              "updatedAt": "2024-12-13T19:29:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLVc6VMkV4",
          "commit": {
            "abbreviatedOid": "2923165"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-13T19:51:10Z",
          "updatedAt": "2024-12-13T19:51:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOMnZLVc6Fqray",
      "title": "Fix one bug, and some rendering issues",
      "url": "https://github.com/privacysandbox/draft-ietf-bidding-and-auction-services/pull/18",
      "state": "MERGED",
      "author": "qingxinwu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "1. return encrypted message, instead of request\r\n2. use three spaces (instead of 2) before each \"1. ....\", otherwise it was not rendered as a new step.",
      "createdAt": "2024-12-18T15:41:33Z",
      "updatedAt": "2024-12-18T15:50:14Z",
      "baseRepository": "privacysandbox/draft-ietf-bidding-and-auction-services",
      "baseRefName": "main",
      "baseRefOid": "9b67a11e9b4b83e6d55e3262748e71373e68d48f",
      "headRepository": "qingxinwu/draft-ietf-bidding-and-auction-services",
      "headRefName": "patch-1",
      "headRefOid": "3e26c67b07e59fcc9d9500e46d44891ed224fb23",
      "closedAt": "2024-12-18T15:44:00Z",
      "mergedAt": "2024-12-18T15:44:00Z",
      "mergedBy": "brusshamilton",
      "mergeCommit": {
        "oid": "300eee82a0396c44110a92b521cd82a6d62f3d39"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLVc6VvT50",
          "commit": {
            "abbreviatedOid": "3e26c67"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-18T15:43:15Z",
          "updatedAt": "2024-12-18T15:43:15Z",
          "comments": []
        }
      ]
    }
  ]
}